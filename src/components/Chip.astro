---
import type { HTMLAttributes } from 'astro/types';

type Props = {
  value: string;
  link?: string;
  color?: 'primary' | 'secondary';
};

const { value, link, color = 'primary' } = Astro.props as Props;

const _baseClass = 'bg-white/5 border border-white/20 px-2 py-1 rounded-sm font-roboto-mono text-xs text-white/75! transition-colors duration-300 ease-in-out';

let _hoverLink = '';

switch (color) {
  case 'primary':
    _hoverLink = 'hover:text-primary! hover:border-primary';
    break;
  case 'secondary':
    _hoverLink = 'hover:text-secondary! hover:border-secondary';
    break;
  default:
    _hoverLink = 'hover:text-primary! hover:border-primary';
}

const linkProps: HTMLAttributes<'a'> = {
  href: link,
  target: link?.startsWith('http') ? '_blank' : undefined,
  rel: link?.startsWith('http') ? 'noopener noreferrer' : undefined,
};
---

{link
  ? (
    <a class={_baseClass} class:list={[_hoverLink]} {...linkProps}>
      {value}
    </a>
  )
  : <span class={_baseClass}>{value}</span>}
